C51 COMPILER V9.01   LIB_MYSPRING                                                          04/09/2019 13:53:44 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LIB_MYSPRING
OBJECT MODULE PLACED IN .\Lib_mySpring.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\C_Source\S2_MyLib\Lib_mySpring.c LARGE BROWSE INCDIR(..\C_Source\S0_Syst
                    -em;..\C_Source\S1_HardDrv;..\C_Source\S2_MyLib;..\C_Source\S3_ApiPlat;..\C_Source\S4_ApiUser;..\C_Source\S5_ApiProtocol;
                    -..\C_Source\S6_MyIncludes;..\C_Source\S1_HardDrv\V9811A_EMU;..\C_Source\S1_HardDrv\V9811A_MCU;..\C_Source\S1_HardDrv\E2P
                    -_24CXXX) DEBUG OBJECTEXTEND PRINT(.\Lib_mySpring.lst) OBJECT(.\Lib_mySpring.obj)

line level    source

   1          /*
   2          *****************Copyright (c)*************************************
   3          **      Hangzhou Xili Watthour Meter Manufacture Co., Ltd. 
   4          **--------------file info--------------------------------------------
   5          **name: Lib_mySpring.c
   6          **Author: maji
   7          **date: 
   8          **description: c code for general library function 
   9          **note: memer type  DJ04A
  10          **--------------------Version History -------------------------------------
  11          ** NO.  Date                    Ver             By                      Description 
  12          **==============================================================
  13          ** 1            2014-07-08              0.1                     sosomj                          1. frist version                             
  14          **
  15          **==============================================================
  16          */
  17          
  18          #include <MyIncludes_H.h>
  19          
  20          
  21          /****************************************************************
  22          Function:       INT8U Lib_Cmp_TwoArry(INT8U* s1, INT8U* s2, INT8U len) 
  23          Description:    两个同样长度的字符串比较大小 
  24          Input:          INT8U* s1   比较数组1首地址
  25                                  INT8U* s2   比较数组2首地址  
  26                                  INT8U len    数组长度
  27          Parameters:     
  28          Returns:                s1 > s2 时,OUT = 1
  29                                  s1 < s2 时,OUT = 255
  30                                  s1 == s2 时 ,OUT = 0
  31          Others: 
  32          ****************************************************************/
  33          INT8U Lib_Cmp_TwoArry(INT8U* s1, INT8U* s2, INT8U len) 
  34          {
  35   1          INT8U i;
  36   1          
  37   1          s1=s1+(char)(len-1);
  38   1          s2=s2+(char)(len-1);
  39   1          for (i=0; i<len;i++)
  40   1          {
  41   2              if((*s1) > (*s2))  return (1);
  42   2              if((*s1) < (*s2))  return (255);
  43   2              s1--;
  44   2              s2--;
  45   2          }
  46   1          return (0);
  47   1      }
  48          
  49          
  50          /****************************************************************
  51          Function:       void  Lib_Rev_Copy_Arry(INT8U* s1, INT8U len) 
  52          Description:    实现自身数组顺序颠倒 
C51 COMPILER V9.01   LIB_MYSPRING                                                          04/09/2019 13:53:44 PAGE 2   

  53                                  such as   A0A1A2A3 ---> A3A2A1A0;
  54          Input:          INT8U* s1   数组1首地址
  55                                  INT8U len    数组长度
  56          Parameters:     
  57          Returns:                no
  58          Others: 
  59          ****************************************************************/
  60          void  Lib_Rev_Copy_Arry(INT8U* s1, INT8U len) 
  61          {
  62   1          INT8U tmpData;
  63   1          INT8U i = len/2;
  64   1      
  65   1          for(i=0; i<len/2;i++)
  66   1          {
  67   2              tmpData=  *(s1+i) ;
  68   2               *(s1+i) = *(s1+len-1-i);
  69   2               *(s1+len-1-i) = tmpData;   
  70   2          }
  71   1      }
  72          
  73          
  74          /****************************************************************
  75          Function:       void  Lib_Copy_Str_TwoArry(INT8U *s1, INT8U *s2, INT8U len) 
  76          Description:    将S2字符串按照原来顺序拷贝至S1数据串
  77          Input:          INT8U* s1   目标数组首地址
  78                                  INT8U* s2   源数组首地址  
  79                                  INT8U len    数组长度
  80          Parameters:     
  81          Returns:                NO
  82          Others: 
  83          ****************************************************************/
  84          void  Lib_Copy_Str_TwoArry(INT8U *s1, INT8U *s2, INT16U len) 
  85          {
  86   1          while(len > 0)
  87   1          {
  88   2              *s1 =*s2;
  89   2              s1++;
  90   2              s2++;
  91   2              len--;
  92   2          }
  93   1      }
  94          
  95          
  96          /****************************************************************
  97          Function:       void  Lib_Set_String(INT8U *s1, INT8U tmp, INT8U len) 
  98          Description:    将s1地址开始的len个数据设置为tmp值
  99          Input:          INT8U* s1   目标数组首地址
 100                                  INT8U tmp   将要设定的数值  
 101                                  INT8U len    数组长度
 102          Parameters:     
 103          Returns:                NO
 104          Others: 
 105          ****************************************************************/
 106          void  Lib_Set_String(INT8U *s1, INT8U tmp, INT16U len) 
 107          {
 108   1          while(len > 0)
 109   1          {
 110   2              *s1 =tmp;
 111   2              s1++;
 112   2              len--;
 113   2          }
 114   1      }
C51 COMPILER V9.01   LIB_MYSPRING                                                          04/09/2019 13:53:44 PAGE 3   

 115          
 116          
 117          /****************************************************************
 118          Function:       void  Lib_Clr_String_U16(INT16U *s1,  INT8U len) 
 119          Description:    将给定的字符串U16格式的数据清零
 120          Input:          INT16U *s1   目标数组首地址，16位数据指针
 121                                  INT8U len    数组长度
 122          Parameters:     
 123          Returns:                NO
 124          Others: 
 125          ****************************************************************/
 126          void  Lib_Clr_String_U16(INT16U *s1,  INT16U len) 
 127          {
 128   1          while(len > 0)
 129   1          {
 130   2              *s1 =0;
 131   2              s1++;
 132   2              len--;
 133   2          }
 134   1          
 135   1      }
 136          
 137          /****************************************************************
 138          Function:       void  Lib_Clr_String(INT8U *s1,  INT8U len) 
 139          Description:    将给定的字符串U16格式的数据清零//
 140          Input:          INT8U *s1   目标数组首地址，8位数据指针
 141                                  INT8U len    数组长度
 142          Parameters:     
 143          Returns:                NO
 144          Others: 
 145          ****************************************************************/
 146          void  Lib_Clr_String(INT8U *s1,  INT16U len) 
 147          {
 148   1          while(len > 0)
 149   1          {
 150   2              *s1 =0;
 151   2              s1++;
 152   2              len--;
 153   2          }
 154   1          
 155   1      }
 156          
 157          
 158          //---------------------------------------------------------------------//
 159          //功能:   计算由起始地址开始到F截止的长度//
 160          //     0000F     return 4
 161          //      *Addr 数据起始地址，num数据长度
 162          //---------------------------------------------------------------------//
 163          INT16U Lib_get_data_0xFF_asclen(INT8U *Addr,INT16U numbyte)
 164          {
 165   1              INT16U i;
 166   1              INT16U asclen=0;
 167   1              for(i=0;i<numbyte;i++)
 168   1              {
 169   2                      if((((*(Addr+i))>>4)&0x0F)==0x0F)
 170   2                      {
 171   3                              return asclen;
 172   3                      }
 173   2                      asclen++;
 174   2                      if(((*(Addr+i))&0x0F)==0x0F)
 175   2                      {
 176   3                              return asclen;
C51 COMPILER V9.01   LIB_MYSPRING                                                          04/09/2019 13:53:44 PAGE 4   

 177   3                      }
 178   2                      asclen++;
 179   2              }
 180   1              return asclen;
 181   1      }
 182          
 183          
 184          //---------------------------------------------------------------------//
 185          //功能: 低字节的低位移到高字节的高位  相当于大端右移半个字节
 186          //   addr为首指针开始的numbyte个字节右移半个字节
 187          //      *addr 数据起始地址，numbyte数据长度  
 188          //大端 0x12 0x34 → 0x01 0x23    数组长2个字节, 4不再往下个字节挪，前补0(使用时注意数组不要越界)    
 189          //---------------------------------------------------------------------//
 190          void Lib_MVHalfByte_R(INT8U *addr,INT8U numbyte)
 191          {
 192   1              INT8U i;
 193   1      
 194   1      
 195   1              for(i=numbyte-1;i>0;i--)
 196   1              {
 197   2                      addr[i] = ((addr[i]>>4) & 0x0f) + ((addr[i-1]<<4) & 0xf0);
 198   2              }
 199   1              addr[0] = (addr[0]>>4) & 0x0f;
 200   1      
 201   1      }
 202          
 203          //---------------------------------------------------------------------//
 204          //功能: 高字节的高位移到低字节的低位  相当于大端左移半个字节
 205          //   addr为首指针开始的numbyte个字节左移半个字节
 206          //      *addr 数据起始地址，numbyte数据长度  
 207          //大端 0x12 0x34 → 0x23 0x40    数组长2个字节，后补0(使用时注意数组不要越界)    
 208          //---------------------------------------------------------------------//
 209          void Lib_MVHalfByte_L(INT8U *addr,INT8U numbyte)
 210          {
 211   1              INT8U i;
 212   1      
 213   1      
 214   1              for(i=0;i<numbyte-1;i++)
 215   1              {
 216   2                      addr[i] = ((addr[i+1]>>4) & 0x0f) + ((addr[i]<<4) & 0xf0);
 217   2              }
 218   1              addr[numbyte-1] = (addr[numbyte-1]<<4) & 0Xf0;
 219   1      
 220   1      }
 221          
 222          
 223          
 224          // //拷贝Flash数据到RAM中 
 225          void Lib_FCpyTMem(uxdata8 *des,const INT8U code *src,INT8U len)
 226          {
 227   1          while(len--)
 228   1          {
 229   2              *(des++)=*(src++);
 230   2          }
 231   1      }
 232          
 233          /***************************************************************
 234          *    END
 235          ****************************************************************/
 236          
 237          

C51 COMPILER V9.01   LIB_MYSPRING                                                          04/09/2019 13:53:44 PAGE 5   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    877    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      44
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
