C51 COMPILER V9.01   DRV_E2P_I2CSOFT                                                       04/08/2019 10:12:05 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DRV_E2P_I2CSOFT
OBJECT MODULE PLACED IN .\Drv_E2P_i2cSoft.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\C_Source\S1_HardDrv\E2P_24CXXX\Drv_E2P_i2cSoft.c LARGE BROWSE INCDIR(..\
                    -C_Source\S0_System;..\C_Source\S1_HardDrv;..\C_Source\S2_MyLib;..\C_Source\S3_ApiPlat;..\C_Source\S4_ApiUser;..\C_Source
                    -\S5_ApiProtocol;..\C_Source\S6_MyIncludes;..\C_Source\S1_HardDrv\V9811A_EMU;..\C_Source\S1_HardDrv\V9811A_MCU;..\C_Sourc
                    -e\S1_HardDrv\E2P_24CXXX) DEBUG OBJECTEXTEND PRINT(.\Drv_E2P_i2cSoft.lst) OBJECT(.\Drv_E2P_i2cSoft.obj)

line level    source

   1          /*
   2          *****************Copyright (c)*************************************
   3          **      Hangzhou Xili Watthour Meter Manufacture Co., Ltd. 
   4          **--------------file info--------------------------------------------
   5          **name                  : Drv_E2P_i2cSoft.c
   6          **Author                : maji
   7          **date                  : 2016-04-19
   8          **description   : c code for e2p's I2C bus operation 
   9          **note                  : 适用于中颖G80F92XD芯片
  10          **--------------------Version History -------------------------------------
  11          ** NO. Date         Ver      By         Description 
  12          **==============================================================
  13          ** 1   2016-04-19   v01.00   sosomj     1. frist version                             
  14          **
  15          **==============================================================
  16          */
  17          
  18          #include <MyIncludes_H.h>
  19          
  20          
  21          
  22          /*******************************************************************************************
  23          ** 函数名称: E2p_IIC_Initail
  24          ** 函数描述: I2C总线硬件初始化
  25          ** 输入参数: 无
  26          ** 输出参数: 无
  27          *******************************************************************************************/
  28          void E2p_IIC_Initail(void)
  29          {
  30   1              I2C_DIO_IN;      // DIO =1  //
  31   1              I2C_CLK_HIGH;    // CLK =1  //
  32   1              I2C_CLK_OUT;
  33   1      }
  34          
  35          
  36          /*******************************************************************************************
  37          ** 函数名称: E2p_Start_i2c
  38          ** 函数描述: 模拟发送I2C总线起始信号 , SCL为高电平时，SDA发出下降沿信号  
  39          ** 输入参数: 无
  40          ** 输出参数: 无
  41          ** 说明    : SCL=0  SDA=0 为起始状态
  42          *******************************************************************************************/
  43          void E2p_Start_i2c(void)
  44          {   
  45   1          I2C_DIO_HIGH;                                  // SDA  = 1
  46   1          I2C_CLK_HIGH;                                  // SCL  = 1
  47   1          HOLD_I2C_CLK();    
  48   1          I2C_DIO_LOW;                                  // SDA = 0
  49   1          HOLD_I2C_CLK();
  50   1          I2C_CLK_LOW ;                                 // SCL= 0
  51   1      }
  52          
C51 COMPILER V9.01   DRV_E2P_I2CSOFT                                                       04/08/2019 10:12:05 PAGE 2   

  53          
  54          /*******************************************************************************************
  55          ** 函数名称: E2p_Stop_i2c
  56          ** 函数描述: 模拟发送I2C总线停止信号 , SCL为高电平时，SDA发出上升沿信号    
  57          ** 输入参数: 无
  58          ** 输出参数: 无
  59          ** 说明    : SCL=1  SDA=1 为停止状态/空闲状态
  60          *******************************************************************************************/
  61          void E2p_Stop_i2c(void)
  62          {       
  63   1              //防冲突处理 //
  64   1      /*      I2C_DIO_HIGH;
  65   1              while(I2C_DIO_JUDGE==0)
  66   1              {
  67   1                      if(I2C_CLK_JUDGE==0)
  68   1                      {
  69   1                              I2C_CLK_HIGH;   
  70   1                      }
  71   1                      else
  72   1                      {
  73   1                              I2C_CLK_LOW;
  74   1                      }
  75   1                      HOLD_I2C_CLK();
  76   1              }
  77   1      
  78   1              I2C_CLK_LOW;
  79   1      */
  80   1              // 正式停止命令处理 //
  81   1      
  82   1          I2C_DIO_LOW ;                        // SDA = 0
  83   1              HOLD_I2C_CLK();
  84   1          I2C_CLK_HIGH;                        // SCL = 1
  85   1              HOLD_I2C_CLK();
  86   1          I2C_DIO_HIGH;                        //SDA = 1
  87   1          HOLD_I2C_CLK();   
  88   1      }
  89          
  90          
  91          /*******************************************************************************************
  92          ** 函数名称: E2p_TxByte_i2c
  93          ** 函数描述: 模拟I2C总线发送一个字节数据 
  94          ** 输入参数: uint8 txData 需要发送的8位数据
  95          ** 输出参数: uint8 发送结果，=TRUE代表成功，=FALSE代表失败
  96          ** 说明    :1. SCL上升沿发出数据//
  97          **          2. E2P回的应答信号在最后一个CLK变低时就会发出
  98          *******************************************************************************************/
  99          uint8 E2p_TxByte_i2c(uint8 txData)
 100          {
 101   1              uint8 data i=0;
 102   1      
 103   1              // 8BITS 数据发送  //
 104   1              for (i=0;i<8;i++)
 105   1              {
 106   2                      I2C_CLK_LOW ;               // SCL= 0  ,very importent
 107   2                      if( txData & 0x80 )
 108   2                      {
 109   3                              I2C_DIO_HIGH;             //SDA = 1
 110   3                      }    
 111   2                      else
 112   2                      {
 113   3                              I2C_DIO_LOW ;            // SDA = 0 
 114   3                      }
C51 COMPILER V9.01   DRV_E2P_I2CSOFT                                                       04/08/2019 10:12:05 PAGE 3   

 115   2                      txData <<= 1;
 116   2                      I2C_CLK_HIGH;                // SCL = 1
 117   2                      HOLD_I2C_CLK();      
 118   2              }
 119   1      
 120   1              // 接收判断总线应答信号，低电平有效//
 121   1              I2C_CLK_LOW ;               // SCL= 0  ,very importent
 122   1              I2C_DIO_IN;
 123   1              i=32;
 124   1              for(i=0;i<32;i++)
 125   1              {
 126   2                      if(I2C_DIO_JUDGE == 0)  // 有应答信号 //
 127   2                      {
 128   3                              I2C_CLK_HIGH;
 129   3                              HOLD_I2C_CLK();
 130   3                              I2C_CLK_LOW;
 131   3                              return TRUE;
 132   3                      }
 133   2              }
 134   1      
 135   1              //总线无应答信号后发送总线停止命令  //
 136   1              I2C_CLK_HIGH;
 137   1              HOLD_I2C_CLK();
 138   1              I2C_CLK_LOW;
 139   1              E2p_Stop_i2c();
 140   1      
 141   1              return FALSE;
 142   1      }
 143          
 144          
 145          /*******************************************************************************************
 146          ** 函数名称: E2p_RxByte_i2c
 147          ** 函数描述: 模拟I2C总线接收一个字节数据 
 148          ** 输入参数: uint8 ack： =FALSE不发送应答信号,= TRUE 发送低电平应答信号
 149          ** 输出参数: uint8 接收到的字节数据
 150          ** 说明    :1. SCL上升沿接收数据//
 151          **          2. 连续接收数据时的最后一个字节首不用发送ACK命令
 152          *******************************************************************************************/
 153          uint8 E2p_RxByte_i2c(uint8 u8_ack)
 154          {
 155   1              uint8 data  i=0;
 156   1              uint8 data rxData=0;
 157   1      
 158   1              I2C_DIO_IN;                                     //SDA_DIR = IN  //
 159   1              I2C_CLK_LOW ;                         // SCL= 0  
 160   1      
 161   1              // 接收一个字节数据代码段 //
 162   1              for (i=0;i<8;i++)
 163   1              {
 164   2                      rxData <<= 1;
 165   2                      I2C_CLK_HIGH;                    // SCL = 1
 166   2                      HOLD_I2C_CLK();
 167   2                      if(I2C_DIO_JUDGE !=0)
 168   2                      {
 169   3                              rxData |= 0x01;         
 170   3                      }
 171   2                      I2C_CLK_LOW ;            // SCL= 0 
 172   2                      HOLD_I2C_CLK(); 
 173   2              }
 174   1      
 175   1              //根据输入参数判断是否需要输出应答低电平信号  //
 176   1              if(u8_ack != FALSE)
C51 COMPILER V9.01   DRV_E2P_I2CSOFT                                                       04/08/2019 10:12:05 PAGE 4   

 177   1              {
 178   2                      I2C_DIO_LOW;    // 发送应答信号 //
 179   2              }
 180   1              else
 181   1              {
 182   2                      I2C_DIO_HIGH;  // 不发送应答信号 //
 183   2              }
 184   1      
 185   1              I2C_CLK_HIGH;                    // SCL = 1
 186   1              HOLD_I2C_CLK();
 187   1              I2C_CLK_LOW ;            // SCL= 0 
 188   1              I2C_DIO_HIGH;                   //SDA = 1 //
 189   1      
 190   1              return(rxData);         // //
 191   1      }
 192          
 193          
 194          /***************************************************************
 195          *    END
 196          ****************************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    443    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
