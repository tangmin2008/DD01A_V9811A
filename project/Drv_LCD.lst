C51 COMPILER V9.01   DRV_LCD                                                               04/11/2019 18:46:30 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DRV_LCD
OBJECT MODULE PLACED IN .\Drv_LCD.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\C_Source\S1_HardDrv\V9811A_MCU\Drv_LCD.c LARGE BROWSE INCDIR(..\C_Source
                    -\S0_System;..\C_Source\S1_HardDrv;..\C_Source\S2_MyLib;..\C_Source\S3_ApiPlat;..\C_Source\S4_ApiUser;..\C_Source\S5_ApiP
                    -rotocol;..\C_Source\S6_MyIncludes;..\C_Source\S1_HardDrv\V9811A_EMU;..\C_Source\S1_HardDrv\V9811A_MCU;..\C_Source\S1_Har
                    -dDrv\E2P_24CXXX) DEBUG OBJECTEXTEND PRINT(.\Drv_LCD.lst) OBJECT(.\Drv_LCD.obj)

line level    source

   1          /*
   2          *****************Copyright (c)*************************************
   3          **      Hangzhou Xili Watthour Meter Manufacture Co., Ltd. 
   4          **--------------file info--------------------------------------------
   5          **name                  : Drv_LCD.c
   6          **Author                : maji
   7          **date                  : 2016-04-20 
   8          **description   : LCD模块的硬件驱动C代码
   9          **note                  : V9811A ，MERTER FOR DL03C
  10          **--------------------Version History -------------------------------------
  11          ** NO. Date         Ver      By         Description 
  12          **==============================================================
  13          ** 1   2016-04-26   v01.00   sosomj     1. frist version                             
  14          **
  15          **==============================================================
  16          */
  17          
  18          #include <MyIncludes_H.h>
  19          
  20          
  21          
  22          /*******************************************************************************************
  23          ** 函数名称: LCD_ON
  24          ** 函数描述: LCD打开显示
  25          ** 输入参数: 无
  26          ** 输出参数: 无 
  27          ** 说明    : 
  28          *******************************************************************************************/
  29          void LCD_ON(void)
  30          {
  31   1          LCDG=0;                 //开LCD时钟
  32   1          CtrlLCDV=0;      // 3.3V
  33   1          LCDCtrl= 0XC2;       //6C0TYPE=0, 6COM,300K,256HZ
  34   1      }
  35          
  36          /*******************************************************************************************
  37          ** 函数名称: LCD_OFF
  38          ** 函数描述: LCD关闭显示
  39          ** 输入参数: 无
  40          ** 输出参数: 无 
  41          ** 说明    : 
  42          *******************************************************************************************/
  43          void LCD_OFF(void)
  44          {
  45   1         LCDG = 1;   // 关闭 //
  46   1      }
  47          
  48          
  49          //*****************************************************************
  50          //  Function:      void Lcd_initial(void)       
  51          //  Description:                                           
  52          //  Others:           
C51 COMPILER V9.01   DRV_LCD                                                               04/11/2019 18:46:30 PAGE 2   

  53          //***************************************************************
  54          void Clr_all_lcd(void)
  55          {
  56   1              LCDM8 =  0x00;    
  57   1              LCDM9 =  0x00;  
  58   1              LCDM10 = 0x00; 
  59   1              LCDM11 =  0x00; 
  60   1              LCDM12 =  0x00; 
  61   1              LCDM13 =  0x00; 
  62   1              LCDM14 =  0x00; 
  63   1              LCDM15 =  0x00; 
  64   1              LCDM18 =  0x00; 
  65   1              LCDM19 =  0x00; 
  66   1              LCDM20 =  0x00; 
  67   1      }
  68          
  69          /*******************************************************************************************
  70          ** 函数名称: Full_SEG
  71          ** 函数描述: 将SEG填入指定的值
  72          ** 输入参数: val:要填入的值
  73          ** 输出参数: 无 
  74          ** 说明    :   V9821   4com
  75          *******************************************************************************************/
  76          void Full_SEG(uint8 val)
  77          {
  78   1              LCDM0 =  val&0XFF;     
  79   1              LCDM4 =  val&0XFF;     
  80   1              LCDM5 =  val&0XFF;     
  81   1              LCDM6 =  val&0XFF;    
  82   1              LCDM7 =  val&0XFF;    
  83   1              LCDM9 =  val&0XFF;    
  84   1              LCDM10 =  val&0XFF;    
  85   1              LCDM11 =  val&0XFF;    
  86   1              LCDM15 =  val&0XFF; 
  87   1              LCDM16 =  val&0XFF;                             //2018-11-15 cxy
  88   1              LCDM17 =  val&0X0F;                 //2018-11-15 cxy
  89   1              LCDM19 =  val&0XFF;    
  90   1      }
  91          
  92          /*******************************************************************************************
  93          ** 函数名称: LCD_Init
  94          ** 函数描述: LCD初始化
  95          ** 输入参数: 无
  96          ** 输出参数: 无 
  97          ** 说明    : 
  98          *******************************************************************************************/
  99          void Init_LCD(void)
 100          {
 101   1      //LCD显示，必须配置为禁止输入输出
 102   1      
 103   1         P3OE |=(BIT0+BIT1+BIT2+BIT3);           // 3.0 - 3.3 com口
 104   1          P4OE |= (BIT0+BIT1);           // P4.0~P4.1
 105   1          P5OE |= 0xFF;           // P5.0~P5.7   
 106   1          P6OE |= (BIT2+BIT3+BIT4+BIT5+BIT6+BIT7);           // P6.2~P6.7   
 107   1          P7OE |= (BIT6+BIT7);           // P7.6~P7.7   
 108   1              P8OE |= (BIT0+BIT1+BIT2);     //P8.0~P8.2   cxy 2018-11-13新增管脚
 109   1              
 110   1          P3IE &=~  (BIT0+BIT1+BIT2+BIT3); 
 111   1          P4IE &=~  (BIT0+BIT1);         
 112   1          P5IE &=~  0xFF;          // P5.0~P5.1
 113   1          P6IE &=~ (BIT2+BIT3+BIT4+BIT5+BIT6+BIT7);          // P6.0~P6.3
 114   1          P7IE &=~ (BIT6+BIT7);           // P7.6~P7.7   
C51 COMPILER V9.01   DRV_LCD                                                               04/11/2019 18:46:30 PAGE 3   

 115   1          P8IE &=~ (BIT0+BIT1+BIT2);      //P8.0~P8.2   cxy 2018-11-13新增管脚
 116   1          
 117   1          LCD_ON();
 118   1          //SegCtrl0: seg0~7,  seg0~1 有效  //
 119   1          SegCtrl0=Bin(00000011);      // seg0~seg1  ON //
 120   1          //SegCtrl1: seg8~15,  seg8~15 有效  //
 121   1          SegCtrl1=Bin(11111111);          // seg8~seg15  ON//
 122   1      
 123   1              //SegCtrl2: seg16~23,  seg18~20 有效  //
 124   1          SegCtrl2=Bin(11111100);     // seg18~seg23  ON//
 125   1          //SegCtrl3: seg24~31,  seg30~31 有效  //
 126   1          SegCtrl3=Bin(11000000);     // seg30~seg31  ON//
 127   1          //SegCtrl4: seg32~39,  seg32~34,  seg38~39有效  //
 128   1          SegCtrl4=Bin(11000111);     // seg32~seg34    seg38 seg39  ON//     cxy 2018-11-13
 129   1      
 130   1      }
 131          
 132          
 133          //*****************************************************************
 134          //  Function:       void InitLCD(void)           
 135          //  Description:                                           
 136          //  Others:        len 为   
 137          //***************************************************************
 138          void Write_LCD(INT8U* bf_i2cData)
 139          { 
 140   1              
 141   1              LCDM0 =  (*(bf_i2cData+6)>>4)&0X0F|((*(bf_i2cData+0))&0XF0);     
 142   1              LCDM4 =  ((*(bf_i2cData+0))&0X0F)|((*(bf_i2cData+1))&0XF0);    
 143   1              LCDM5 =  (*(bf_i2cData+1))&0X0F|((*(bf_i2cData+2))&0XF0);     
 144   1              LCDM6 =  (*(bf_i2cData+2))&0X0F|((*(bf_i2cData+3))&0XF0);     
 145   1              LCDM7 =  (*(bf_i2cData+3))&0X0F|((*(bf_i2cData+4))&0XF0);     
 146   1              LCDM9 =  (*(bf_i2cData+4))&0X0F|((*(bf_i2cData+5))&0XF0);     
 147   1              LCDM10 = (*(bf_i2cData+5))&0X0F|((*(bf_i2cData+9))&0xF0);         //P5 S5 S3 S1
 148   1              LCDM11 = (*(bf_i2cData+9))&0X0F|((*(bf_i2cData+10))&0xF0);        //S7 S8 S9 S10  / S6 S4 S2 
 149   1              LCDM15 = (*(bf_i2cData+6))&0X0F|((*(bf_i2cData+7))&0xF0);                
 150   1              LCDM16 = (*(bf_i2cData+7))&0X0F|((*(bf_i2cData+8))&0xF0);
 151   1              LCDM17 = (*(bf_i2cData+8))&0X0F;     
 152   1              LCDM19 = (*(bf_i2cData+10))&0X0F|((*(bf_i2cData+11))&0xF0);  //T5 T6 S12 S11  T4 T3 T2 T1 
 153   1      
 154   1      }
 155          
 156          
 157          /*******************************************************************************************
 158          **    END
 159          *******************************************************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    417    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
